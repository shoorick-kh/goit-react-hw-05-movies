{"version":3,"file":"static/js/HomePage.25c4dc6d.chunk.js","mappings":"uQAAA,IAAMA,EAAM,mCACNC,EAAU,+BAEhB,SAASC,IACP,OAAOC,MAAM,GAAD,OAAIF,EAAJ,uCAA0CD,IAAOI,MAC3D,SAAAC,GACE,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAJ,yBAK5B,SAASC,EAAgBC,GACvB,OAAOT,MAAM,GAAD,OAAIF,EAAJ,kBAAqBW,EAArB,oBAAmCZ,EAAnC,oBAAyDI,MACnE,SAAAC,GACE,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAJ,yBAK5B,SAASG,EAAQD,GACf,OAAOT,MAAM,GAAD,OACPF,EADO,kBACUW,EADV,4BACgCZ,EADhC,oBAEVI,MAAK,SAAAC,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAJ,yBAI1B,SAASI,EAAWF,GAClB,OAAOT,MAAM,GAAD,OACPF,EADO,kBACUW,EADV,4BACgCZ,EADhC,oBAEVI,MAAK,SAAAC,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAJ,yBAI1B,SAASK,EAAgBC,GACvB,OAAOb,MAAM,GAAD,OACPF,EADO,iCACyBD,EADzB,4DACgFgB,IAC1FZ,MAAK,SAAAC,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAJ,2B,yGCrD1B,EAAuB,uB,2BCMR,SAASO,IACtB,OAA4CC,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA0BJ,EAAAA,EAAAA,YAA1B,eAAOK,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAejB,OAbAC,EAAAA,EAAAA,YAAU,WACRL,EAAU,YACVpB,EAAAA,EAAAA,MACGE,MAAK,SAAAwB,GACJR,EAAkBQ,EAAOC,SACzBP,EAAU,eAEXQ,OAAM,SAAAP,GACLC,EAASD,GACTD,EAAU,iBAEb,IAEY,aAAXD,EACKU,MAAMR,IAIb,gCACc,YAAXF,IAAwB,SAACW,EAAA,EAAD,IACb,aAAXX,IACC,4BACE,4CACA,wBACGF,EAAec,KAAI,SAAAC,GAAK,OACvB,yBACE,SAAC,KAAD,CACEC,UAAWC,EACXC,GAAE,kBAAaH,EAAMtB,IACrB0B,MAAO,CAAEC,KAAMd,GAHjB,SAKGS,EAAMM,SANFN,EAAMtB","sources":["services/apiService.js","webpack://goit-react-hw-05-movies/./src/views/HomePage/HomePage.module.css?a66d","views/HomePage/HomePage.js"],"sourcesContent":["const KEY = '23a6887a211ddc55a1dd6d751fafcbf6';\nconst baseUrl = 'https://api.themoviedb.org/3';\n\nfunction getTrendingMovies() {\n  return fetch(`${baseUrl}/trending/movie/day?api_key=${KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error(`There is no data!`));\n    }\n  );\n}\n\nfunction getMovieDetails(id) {\n  return fetch(`${baseUrl}/movie/${id}?api_key=${KEY}&language=en-US`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error(`There is no data!`));\n    }\n  );\n}\n\nfunction getCast(id) {\n  return fetch(\n    `${baseUrl}/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`There is no data!`));\n  });\n}\n\nfunction getReviews(id) {\n  return fetch(\n    `${baseUrl}/movie/${id}/reviews?api_key=${KEY}&language=en-US`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`There is no data!`));\n  });\n}\n\nfunction getMovieByQuery(query) {\n  return fetch(\n    `${baseUrl}/search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`There is no data!`));\n  });\n}\n\nexport {\n  getTrendingMovies,\n  getMovieDetails,\n  getCast,\n  getReviews,\n  getMovieByQuery,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"HomePage_link__CYdf4\"};","import { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport s from './HomePage.module.css';\nimport { getTrendingMovies } from '../../services/apiService';\nimport Loader from '../../components/Loader/Loader';\n\nexport default function HomePage() {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [status, setStatus] = useState('idle');\n  const [error, setError] = useState();\n  const location = useLocation();\n\n  useEffect(() => {\n    setStatus('pending');\n    getTrendingMovies()\n      .then(movies => {\n        setTrendingMovies(movies.results);\n        setStatus('resolved');\n      })\n      .catch(error => {\n        setError(error);\n        setStatus('rejected');\n      });\n  }, []);\n\n  if (status === 'rejected') {\n    return alert(error);\n  }\n\n  return (\n    <>\n      {status === 'pending' && <Loader />}\n      {status === 'resolved' && (\n        <div>\n          <h2>Trending today</h2>\n          <ul>\n            {trendingMovies.map(movie => (\n              <li key={movie.id}>\n                <Link\n                  className={s.link}\n                  to={`/movies/${movie.id}`}\n                  state={{ from: location }}\n                >\n                  {movie.title}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </>\n  );\n}\n"],"names":["KEY","baseUrl","getTrendingMovies","fetch","then","response","ok","json","Promise","reject","Error","getMovieDetails","id","getCast","getReviews","getMovieByQuery","query","HomePage","useState","trendingMovies","setTrendingMovies","status","setStatus","error","setError","location","useLocation","useEffect","movies","results","catch","alert","Loader","map","movie","className","s","to","state","from","title"],"sourceRoot":""}